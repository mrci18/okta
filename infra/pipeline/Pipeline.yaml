Resources:
# References Okta Deployer Roles by respective build environment as variables
  # Create SSM parameter store that maps to the env variable
# Pipeline
  DefaultCodepipelineWebhook:
    Type: 'AWS::CodePipeline::Webhook'
    Properties:
      Name: !Sub ${Service}CodePipelineWebhook
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Ref GitHubSecret
      Filters:
        - JsonPath: "$.ref"
          MatchEquals: refs/heads/{Branch}
      TargetPipeline: !Ref DefaultCodePipeline
      TargetAction: SourceAction
      TargetPipelineVersion: !GetAtt DefaultCodePipeline.Version
      RegisterWithThirdParty: true

  DefaultCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub ${Service}
      RoleArn: !ImportValue SecurityCodePipelineRoleArn
      Stages:
        - Name: GitHubSource
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref RepositoryName
                Branch: !Ref BranchName
                OAuthToken: !Ref GitHubOAuthToken
                PollForSourceChanges: false
              OutputArtifacts:
                - Name: sArtifact
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: DefaultBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref DefaultBuild
              InputArtifacts:
                - Name: sArtifact
              OutputArtifacts:
                - Name: DefaultBuild
              RunOrder: 1
            - Name: DevBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref DevBuild
              InputArtifacts:
                - Name: sArtifact
              OutputArtifacts:
                - Name: DevBuild
              RunOrder: 1
            # Copy from here to make new build for new account
            - Name: MatsonlabsBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref MatsonlabsBuild
              InputArtifacts:
                - Name: sArtifact
              OutputArtifacts:
                - Name: MatsonlabsBuild
              RunOrder: 1
            # End copy. Paste below and edit
        - Name: ApproveToProd
          Actions:
            - Name: ApproveToProd
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Version: 1
                Provider: Manual
        - Name: ProdBuilds
          Actions:
            - Name: ProdBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref ProdBuild
              InputArtifacts:
                - Name: sArtifact
              OutputArtifacts:
                - Name: ProdBuild
              RunOrder: 1
      ArtifactStore:
        Type: S3
        Location: !ImportValue SecurityDeploymentBucketName

#Builds
  DefaultBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Description: Creates user for Okta and set Idp
      ServiceRole: !ImportValue SecurityCodeBuildRoleArn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:2.0
        EnvironmentVariables:
          - Name: SERVICE
            Value: !Ref Service
          - Name: OKTAUSER
            Value: !Ref OktaUsername
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec/master.yaml
      TimeoutInMinutes: 10
      QueuedTimeoutInMinutes: 10
      Tags:
        - Key: Service
          Value: !Ref Service
        - Key: Team
          Value: !Ref Team

  DevBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Description: Creates Okta roles and set Idp
      ServiceRole: !ImportValue SecurityCodeBuildRoleArn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:2.0
        EnvironmentVariables:
          - Name: SERVICE
            Value: !Ref Service
          - Name: OktaDevDeployerRole
            Type: PARAMETER_STORE
            Value: OktaDevDeployerRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec/dev.yaml
      TimeoutInMinutes: 10
      QueuedTimeoutInMinutes: 10
      Tags:
        - Key: Service
          Value: !Ref Service
        - Key: Team
          Value: !Ref Team

  MatsonlabsBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Description: Creates Okta roles and set Idp
      ServiceRole: !ImportValue SecurityCodeBuildRoleArn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:2.0
        EnvironmentVariables:
          - Name: SERVICE
            Value: !Ref Service
          - Name: OktaMatsonlabsDeployerRole
            Type: PARAMETER_STORE
            Value: OktaMatsonlabsDeployerRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec/matsonlabs.yaml
      TimeoutInMinutes: 10
      QueuedTimeoutInMinutes: 10
      Tags:
        - Key: Service
          Value: !Ref Service
        - Key: Team
          Value: !Ref Team

  ProdBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Description: Creates Okta roles and set Idp
      ServiceRole: !ImportValue SecurityCodeBuildRoleArn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:2.0
        EnvironmentVariables:
          - Name: SERVICE
            Value: !Ref Service
          - Name: OktaProdDeployerRole
            Type: PARAMETER_STORE
            Value: OktaProdDeployerRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec/prod.yaml
      TimeoutInMinutes: 10
      QueuedTimeoutInMinutes: 10
      Tags:
        - Key: Service
          Value: !Ref Service
        - Key: Team
          Value: !Ref Team

Parameters:
  Service:
    Description: Name of the service you are deploying, name will be used to reference in IAM role and policy
    Type: String
    Default: Okta

  Team:
    Description: The team that owns this service
    Type: String
    AllowedPattern: ^[a-zA-Z0-9]*$
    Default: Security

  BranchName:
    Description: GitHub branch name
    Type: String
    Default: master

  RepositoryName:
    Description: GitHub repository name
    Type: String
    Default: sec_mfasupervisor

  GitHubOwner:
    Description: Matson Org Account
    Type: String
    Default: MatsonInc

  GitHubSecret:
    Description: Password of the user who creates the OAuth token
    Type: String
    NoEcho: true

  GitHubOAuthToken:
    Description: |+
      Create an OAuth token following this link ***https://help.github.com/en/articles/creating-a-personal-access-token-for-the-command-line***

      1. Only select `repo`. This will give full control of private repositories, which CodePipeline will use to poll private repositories

      2. After generating OAuth token, `Enable SSO` and `Authorize` to access MatsonInc on that specific token
    Type: String
    NoEcho: true

  OktaUsername:
    Description: IAM user used by Okta
    Type: String
    Default: okta-master

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Tags
        Parameters:
          - Team
      - Label:
          default: Github
        Parameters:
          - Service
          - Stage
          - BranchName
          - RepositoryName
          - GitHubOwner
          - GitHubSecret
          - GitHubOAuthToken
      - Label:
          default: Build

    ParameterLabels:
      Service:
        default: Service Name
      Stage:
        default: Release Stage
      BranchName:
        default: Branch Name
      RepositoryName:
        default: Repository Name
      GitHubOwner:
        default: GitHub Owner
      GitHubSecret:
        default: GitHub Secret
      GitHubOAuthToken:
        default: GitHub OAuth Token
