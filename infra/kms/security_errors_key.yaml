Resources:
  DefaultKMSKey:
    Type: 'AWS::KMS::Key'
    Properties:
      Description: KMS Key used for code build
      EnableKeyRotation: true
      KeyPolicy:
        Id: SecurityErrorsKMSPolicy
        Version: '2012-10-17'
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: "*"
          - Sid: Allow access for Key Administrators
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:user/${User}
            Action:
              - "kms:DescribeKey"
              - "kms:Encrypt"
              - "kms:Decrypt"
              - "kms:ReEncrypt*"
              - "kms:GenerateDataKey"
              - "kms:GenerateDataKeyWithoutPlaintext"
            Resource: "*"
      Tags:
        - Key: Team
          Value: !Ref Team

  KMSAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/SECURITY_ERRORS
      TargetKeyId: !Ref DefaultKMSKey

Parameters:
  Team:
    Type: String
    Description: The team that owns this service
    AllowedPattern: ^[a-zA-Z0-9]*$
  User:
    Type: String
    Description: User launching this CFT. User will be included in kms policy

Outputs:
  DefaultKMSID:
    Description: The key ID of default KMS key
    Value: !Ref DefaultKMSKey
    Export:
      Name: SecurityErrorsKMSKeyID
  DefaultKMSArn:
    Description: The arn value of the default KMS key
    Value: !GetAtt DefaultKMSKey.Arn
    Export:
      Name: SecurityErrorsKMSKeyArn