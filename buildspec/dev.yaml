version: 0.2

phases:
  pre_build:
    commands:
      - pwd
      - export AccountID=$(aws sts get-caller-identity --query "Account" --output text)
      - export OktaMetadataURL=$(aws ssm get-parameters --name OktaMetadataURL --with-decryption --query "Parameters[].Value" --output text)

  build:
    commands:
      - ls 
      - role=$(aws sts assume-role --role-arn ${OktaDevDeployerRole} --role-session-name okta-deployer-session --duration-seconds 900)
      - KEY=$(echo $role |awk '{print $5}' |  tr -d '"' | tr -d ',' | tr -d '{' | tr -d '}')
      - SECRET=$(echo $role |awk '{print $7}' |  tr -d '"' | tr -d ',' | tr -d '{' | tr -d '}')
      - TOKEN=$(echo $role |awk '{print $9}' |  tr -d '"' | tr -d ',' | tr -d '{' | tr -d '}')
      - export AWS_ACCESS_KEY_ID=$KEY
      - export AWS_SESSION_TOKEN=$TOKEN
      - export AWS_SECRET_ACCESS_KEY=$SECRET
      - export AWS_DEFAULT_REGION=us-west-2
      - wget -O metadata.xml ${OktaMetadataURL} 
      - cat metadata.xml | tr -d '\n' | sed -e 's/"/\"/g' > out.xml
      - aws cloudformation deploy --no-fail-on-empty-changeset --template-file ./okta-base.yaml --stack-name OktaBase --parameter-overrides Service=${SERVICE} MetadataDocument="$(cat out.xml)" SamlProviderName=${SERVICE} --capabilities CAPABILITY_NAMED_IAM
      - aws cloudformation deploy --no-fail-on-empty-changeset --template-file ./Okta-Idp-cross-account-role.yaml --stack-name OktaIdPCrossAccountRole --parameter-overrides OktaMasterAccountID=${AccountID} --capabilities CAPABILITY_NAMED_IAM

  post_build:
    commands:
      - echo Done!
