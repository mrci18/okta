Resources:
### Big Data ###
  BigDataRole:
    Type: 'AWS::IAM::Role'
    Properties:
      ManagedPolicyArns: 
      - arn:aws:iam::aws:policy/AmazonAthenaFullAccess
      - arn:aws:iam::aws:policy/AmazonMachineLearningFullAccess
      - arn:aws:iam::aws:policy/AmazonSageMakerFullAccess
      - arn:aws:iam::aws:policy/AmazonSNSFullAccess
      - arn:aws:iam::aws:policy/AmazonSQSFullAccess
      - arn:aws:iam::aws:policy/AmazonS3FullAccess
      - arn:aws:iam::aws:policy/AWSGlueConsoleFullAccess
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Federated: !Ref SAMLARN
          Action: sts:AssumeRoleWithSAML
          Condition:
            StringEquals: 
              SAML:aud: "https://signin.aws.amazon.com/saml"

  BigDataPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: BigDataExtra
      Roles: 
      - !Ref BigDataRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: DMS
          Effect: Allow
          Action:
          - dms:*
          Resource: "*"
        - Sid: Glue
          Effect: Allow
          Action:
          - glue:*
          Resource: "*"
        - Sid: GlueTag
          Effect: Allow
          Action:
          - ec2:CreateTags
          - ec2:DeleteTags
          Condition:
            ForAllValues:StringEquals:
              aws:TagKeys:
              - aws-glue-service-resource
          Resource:
          - arn:aws:ec2:*:*:network-interface/*
          - arn:aws:ec2:*:*:security-group/*
          - arn:aws:ec2:*:*:instance/*
        - Sid: LakeFormation
          Effect: Allow
          Action:
          - lakeformation:GetDataAccess:*
          Resource: "*"      

  BigDataIAMPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: BigDataIAM
      Roles: 
      - !Ref BigDataRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: IAMView
          Effect: Allow
          Action:
          - iam:List*
          - iam:Get*
          Resource: "*"
        - Sid: NoBoundaryEdit
          Effect: Deny
          Action: 
          - iam:CreatePolicyVersion
          - iam:DeletePolicy
          - iam:DeletePolicyVersion
          - iam:SetDefaultPolicyVersion
          Resource: !Sub arn:aws:iam::${AWS::AccountId}:policy/${Service}*
        - Sid: PutPB
          Effect: Allow
          Action: 
          - iam:PutRolePermissionsBoundary
          Resource: "*"
        - Sid: IAMCreate 
          Effect: Allow
          Action:
          - iam:CreateRole
          - iam:CreatePolicy
          Resource: "*"
          Condition: 
            StringEquals: 
              iam:PermissionsBoundary: !Sub arn:aws:iam::${AWS::AccountId}:policy/${Service}BigDataBoundary
        - Sid: OnlyAttachPolicyWithPermissionBoundary
          Effect: Allow
          Action:
          - iam:AttachRolePolicy
          - iam:PutRolePolicy
          Resource: "*"
          Condition: 
            StringEquals: 
              iam:PermissionsBoundary: !Sub arn:aws:iam::${AWS::AccountId}:policy/${Service}BigDataBoundary

##BigData Permission Boundary
  BigDataBoundaryPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      ManagedPolicyName: !Sub ${Service}BigDataBoundary
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: MachineLearning
          Effect: Allow
          Action:
          - machinelearning:*
          Resource: "*"
        - Sid: SNS
          Effect: Allow
          Action:
          - sns:*
          Resource: "*"
        - Sid: SQS
          Effect: Allow
          Action:
          - sqs:*
          Resource: "*"
        - Sid: S3
          Effect: Allow
          Action:
          - s3:*
          Resource: "*"
        - Sid: KMS
          Action:
          - kms:Decrypt
          - kms:Encrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey*
          - kms:DescribeKey
          - kms:CreateGrant
          - kms:ListGrants
          - kms:RevokeGrant
          - kms:ListKeys
          - kms:ListAliases
          - kms:DescribeKey
          - kms:ListKeyPolicies
          - kms:GetKeyPolicy
          - kms:GetKeyRotationStatus
          - kms:TagResource
          - kms:CreateKey
          - kms:CreateAlias
          Resource: "*"
 
### Data Science ###
  DataScienceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      ManagedPolicyArns: 
      - arn:aws:iam::aws:policy/AmazonAthenaFullAccess
      - arn:aws:iam::aws:policy/AmazonMachineLearningFullAccess
      - arn:aws:iam::aws:policy/AmazonS3FullAccess
      - arn:aws:iam::aws:policy/AmazonSageMakerFullAccess
      - arn:aws:iam::aws:policy/AWSGlueConsoleFullAccess
      - arn:aws:iam::aws:policy/service-role/AWSQuicksightAthenaAccess
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Federated: !Ref SAMLARN
          Action: sts:AssumeRoleWithSAML
          Condition:
            StringEquals: 
              SAML:aud: "https://signin.aws.amazon.com/saml"

##DataScience Permission Boundary
  DataScienceBoundaryPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      ManagedPolicyName: !Sub ${Service}DataScienceBoundary
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: Athena
          Effect: Allow
          Action:
          - Athena:*
          Resource: "*"
        - Sid: MachineLearning
          Effect: Allow
          Action:
          - machinelearning:*
          Resource: "*"
        - Sid: S3
          Effect: Allow
          Action:
          - s3:*
          Resource: "*"

Parameters:
  Service:
    Description: Name of the service you are deploying, name will be used to reference in IAM role and policy
    Type: String
    Default: 

  SAMLARN:
    Description: The SAML ARN of the IdP in this account
    Type: String