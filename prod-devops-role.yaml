Resources:
  ProdDevOpsRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Federated: !Ref SAMLARN
          Action: sts:AssumeRoleWithSAML
          Condition:
            StringEquals: 
              SAML:aud: "https://signin.aws.amazon.com/saml"

  IAMCreatePolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: DevOps
      Roles: 
      - !Ref ProdDevOpsRole
      - !Ref ProdDBARole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: IAMView
          Effect: Allow
          Action:
          - iam:List*
          - iam:Get*
          Resource: "*"
        - Sid: NoBoundaryEdit
          Effect: Deny
          Action: 
          - iam:CreatePolicyVersion
          - iam:DeletePolicy
          - iam:DeletePolicyVersion
          - iam:SetDefaultPolicyVersion
          Resource: !Sub arn:aws:iam::${AWS::AccountId}:policy/PermissionsManagementBoundary
        - Sid: PutPB
          Effect: Allow
          Action: 
          - iam:PutRolePermissionsBoundary
          Resource: "*"
          # Condition: 
          #   StringEquals: 
          #     iam:PermissionsBoundary: !Sub arn:aws:iam::${AWS::AccountId}:policy/PermissionsManagementBoundary
          # Maybe add condition for specific permission boundary
        - Sid: IAM 
          Effect: Allow
          Action:
          - iam:CreateRole
          - iam:CreatePolicy
          Resource: "*"
          Condition: 
            StringEquals: 
              iam:PermissionsBoundary: !Sub arn:aws:iam::${AWS::AccountId}:policy/PermissionsManagementBoundary
        - Sid: OnlyAttachPolicyWithPermissionBoundary
          Effect: Allow
          Action:
          - iam:AttachRolePolicy
          - iam:PutRolePolicy
          Resource: "*"
          Condition: 
            StringEquals: 
              iam:PermissionsBoundary: !Sub arn:aws:iam::${AWS::AccountId}:policy/PermissionsManagementBoundary

  DevOpsPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: DevOps
      Roles: 
      - !Ref ProdDevOpsRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: CatchAll
          Effect: Allow
          Action:
          - acm:*
          - apigateway:*
          - athena:*
          - backup:*
          - cloudformation:*
          - cloudfront:*
          - cloudwatch:*
          - config:*
          - dynamodb:*
          - ec2:*
          - elasticfilesystem:*
          - elasticloadbalancing:*
          - events:*
          - execute-api:*
          - glacier:*
          # - iam:List*
          # - iam:Get*
          - iam:PassRole
          - kms:Decrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey*
          - kms:Encrypt
          - kms:GetKeyRotationStatus
          - kms:RevokeGrant
          - kms:PutKeyPolicy
          - kms:TagResource
          - kms:DescribeKey
          - kms:CreateKey
          - kms:CreateGrant
          - kms:ListKeyPolicies
          - kms:GetKeyPolicy
          - kms:ListGrants
          - kms:ListKeys
          - kms:ListAliases
          - kms:CreateAlias
          - lambda:*
          - rds:*
          - route53:ChangeResourceRecordSets
          - route53:DeleteRecordSets
          - route53:ListResourceRecordSets
          - ses:*
          - sns:*
          - sts:*
          - support:*
          - s3:*
          - waf:*
          Resource: "*"
        - Sid: CloudTrail
          Effect: Deny
          Action:
          - cloudtrail:StopLogging
          - cloudtrail:DeleteTrail
          - cloudtrail:CreateTrail
          - cloudtrail:RemoveTags
          Resource: "*"
        - Sid: TrustedAdvisor
          Action:
          - trustedadvisor:ExcludeCheckItems
          - trustedadvisor:RefreshCheck
          Effect: Allow
          Resource: "*"

  PermissionsManagementPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      ManagedPolicyName: PermissionsManagementBoundary
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: Allow
          Effect: Allow
          Action: "*"
          Resource: "*"
        - Sid: Deny 
          Effect: Deny
          Action:
          - iam:UpdateAssumeRolePolicy
          - iam:DeleteAccountPasswordPolicy
          - iam:PutRolePermissionsBoundary
          - iam:PutUserPermissionsBoundary
          - iam:AttachUserPolicy
          - iam:DeleteUserPolicy
          - iam:DeletePolicy
          - iam:AttachRolePolicy
          - iam:DeleteUserPermissionsBoundary
          - iam:PutRolePolicy
          - iam:DeleteRolePermissionsBoundary
          - iam:DetachRolePolicy
          - iam:AttachGroupPolicy
          - iam:DeleteRolePolicy
          - iam:PutUserPolicy
          - iam:DetachGroupPolicy
          - iam:CreatePolicyVersion
          - iam:DeleteGroupPolicy
          - iam:DetachUserPolicy
          - iam:DeletePolicyVersion
          - iam:PutGroupPolicy
          - iam:SetDefaultPolicyVersion
          Resource: "*"

  ProdDBARole:
    Type: 'AWS::IAM::Role'
    Properties:
      PermissionsBoundary: !Sub arn:aws:iam::${AWS::AccountId}:policy/PermissionsManagementBoundary
      ManagedPolicyArns: 
      - arn:aws:iam::aws:policy/job-function/DatabaseAdministrator 
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Federated: !Ref SAMLARN
          Action: sts:AssumeRoleWithSAML
          Condition:
            StringEquals: 
              SAML:aud: "https://signin.aws.amazon.com/saml"

  DBAPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: DBA
      Roles: 
      - !Ref ProdDBARole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: AthenaDMSGlue
          Effect: Allow
          Action:
          - athena:*
          - dms:*
          - glue:*
          Resource: "*"

  ReadOnlyRole:
    Type: 'AWS::IAM::Role'
    Properties:
      ManagedPolicyArns: 
      - arn:aws:iam::aws:policy/ReadOnlyAccess
      PermissionsBoundary: arn:aws:iam::aws:policy/ReadOnlyAccess
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Federated: !Ref SAMLARN
          Action: sts:AssumeRoleWithSAML
          Condition:
            StringEquals: 
              SAML:aud: "https://signin.aws.amazon.com/saml"

Parameters:
  SAMLARN:
    Description: The SAML ARN of the IdP in this account
    Type: String